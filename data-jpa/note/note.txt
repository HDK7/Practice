NamedQuery 는 문자열이지만 파싱해서 어플리케이션 로딩이 오류를 잡아준다. 

가독성과 유지 보수를 위해 데이터 바인딩은 숫자가 아닌 이름 기반으로 하는것이 좋다.

pageable 을 사용할 때 반환 타입에 따라 쿼리가 달라진다.

Total count가 속도에서 문제가 생기는 경우가 많아서 Count Query만 따로 분리 할 수 있다.

@Query 에서 fetch - join 작성으로 LAZY 개체들을 한번에 같이 불러옴. 또는 @EntityGraph로 해결

비즈니스 로직과 DTO DAO 같은 로직들은 쪼개서 따로 레포지터리 클래스를 만들어주면 좋다. 

커맨드와 쿼리의 분리 , 핵심비즈니스 로직과 아닌 것은 분리하는 것, 라이프 사이클에 관련된 고민들이 필요하다.

merge는 준영속을 영속으로 만들때 사용